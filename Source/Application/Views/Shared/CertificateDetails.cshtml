@model CertificateDetails
@if(Model.Certificate != null)
{
	<dl>
		<dt class="d-inline">Archived: </dt>
		<dd class="d-inline">
			@Model.Certificate.Archived.ToString().ToLowerInvariant()<br />
		</dd>
		<dt class="d-inline">Friendly name: </dt>
		<dd class="d-inline">
			@Model.Certificate.FriendlyName<br />
		</dd>
		<dt class="d-inline">Has private key: </dt>
		<dd class="d-inline">
			@Model.Certificate.HasPrivateKey.ToString().ToLowerInvariant()<br />
		</dd>
		<dt class="d-inline">Issuer: </dt>
		<dd class="d-inline">
			@Model.Certificate.Issuer<br />
		</dd>
		<dt class="d-inline">Key-algorithm: </dt>
		<dd class="d-inline">
			@Model.Certificate.KeyAlgorithm<br />
		</dd>
		<dt class="d-inline">Key-algorithm (name): </dt>
		<dd class="d-inline">
			@Model.Certificate.KeyAlgorithmName<br />
		</dd>
		<dt class="d-inline">Not after: </dt>
		<dd class="d-inline">
			@Model.Certificate.NotAfter<br />
		</dd>
		<dt class="d-inline">Not before: </dt>
		<dd class="d-inline">
			@Model.Certificate.NotBefore<br />
		</dd>
		<dt class="d-inline">Serial number: </dt>
		<dd class="d-inline">
			@Model.Certificate.SerialNumber<br />
		</dd>
		<dt class="d-inline">Signature-algorithm: </dt>
		<dd class="d-inline">
			@Model.Certificate.SignatureAlgorithm?.FriendlyName<br />
		</dd>
		<dt class="d-inline">Store: </dt>
		<dd class="d-inline">@Model.Certificate.Store!.Location / @Model.Certificate.Store.Name<br /></dd>
		<dt class="d-inline">String-representation: </dt>
		<dd class="d-inline">
			@Model.Certificate.ToString()<br />
		</dd>
		<dt class="d-inline">Subject: </dt>
		<dd class="d-inline">
			@Model.Certificate.Subject<br />
		</dd>
		<dt class="d-inline">Thumbprint: </dt>
		<dd class="d-inline">
			@Model.Certificate.Thumbprint<br />
		</dd>
		<dt class="d-inline">Version: </dt>
		<dd class="d-inline">
			@Model.Certificate.Version<br />
		</dd>
	</dl>
}